Instructions:

Filter to the last 2 years of data i.e. only 2023 and 2024 transactions
This will allow for year on year comparison
Update the Cash_or_Card field so that:
1=Card
2=Cash
Join the Product Table
You'll need to prepare the join clause fields first
Calculate the Quantity of each transaction 
Defined as the Sales_Before_Discount / Selling_Price
In the Loyalty Table:
The Customer_Name is currently reading Last Name, First Name. Update it to read First Name Last Name in Title case
e.g. knell, libby becomes Libby Knell
Group together the Loyalty_Tiers into Gold, Silver and Bronze
Update the Loyalty_Discount to be a numeric field
Join the Loyalty Table
Create a Sales_After_Discount field to apply the Loyalty_Discount for transactions with a Loyalty_Number
Calculate the Profit, defined as:
Sales_After_Discount - (Unit_Cost * Quantity)
Update the field names to remove all underscores and replace them with spaces
Remove any unnecessary fields
Output the data
If you're working in a tool that allows you to create a Published Data Source, that would be best, as we're preparing the data for Pulse!


CODE:

with TransactionsTable as(
select 
to_date("Transaction_Date", 'DY, MMMM DD, YYYY') ParseDate,
case
when "Cash_or_Card" ='1' then 'Card'
when "Cash_or_Card" ='2' then 'Cash' end as Cash_or_Card,
"Transanction_Number",
split_part("Product_ID",'-', 1) as Product_Type,
split_part("Product_ID",'-', 2) As Product,
"Product_ID",
"Loyalty_Number", 
"Sales_Before_Discount"
from
TIL_PLAYGROUND.PREPPIN_DATA_INPUTS.PD2024_WK10_TRANSACTION
Where Year(ParseDate) >= 2023),



ProductTable AS (
select 
replace("Product_Scent", ' ', '_') as Product_Scent1,
coalesce("Pack_Size", "Pack_Size", "Product_Size") as Pack_Volume, 
Concat("Product_Type", '-',Product_Scent1,'-',Pack_Volume) as Product,
"Product_Size", 
"Product_Type", 
"Unit_Cost", 
"Selling_Price"

from TIL_PLAYGROUND.PREPPIN_DATA_INPUTS.PD2024_WK10_PRODUCT),


ProductTransactionsTable AS (
select 
"Sales_Before_Discount"/ "Selling_Price" as Quantity,
*
from TransactionsTable AS A
inner Join ProductTable AS B
on "Product_ID" = B.Product),



LoyaltyTable as (

Select 
SPLIT_PART ("Customer_Name", ',', 1) as LastName,
SPLIT_PART ("Customer_Name", ',', 2) as FirstName,
UPPER((FirstName|| ' '||LastName)) as FullName1,
Case
When "Loyalty_Tier" = 'Bronze' then 'Bronze'
When "Loyalty_Tier" = 'Bronz' then 'Bronze'
When "Loyalty_Tier" = 'bronze' then 'Bronze'
When "Loyalty_Tier" = 'Silver' then 'Silver'
When "Loyalty_Tier" = 'Sliver' then 'Silver'
When "Loyalty_Tier" = 'silver' then 'Silver'
When "Loyalty_Tier" = 'Goald' then 'Gold'
When "Loyalty_Tier" = 'gold' then 'Gold'
When "Loyalty_Tier" = 'Gold' then 'Gold'
end as Loyalty_Tier1,
replace("Loyalty_Discount", '%', '') as Loyalty_Discount1,
*
from TIL_PLAYGROUND.PREPPIN_DATA_INPUTS.PD2024_WK10_LOYALTY)

select 
length(Loyalty_Discount1) discountlength,
case
when discountlength = 1 then (concat('0.0', Loyalty_Discount1))
when discountlength = 2 then (concat('0.', Loyalty_Discount1)) end as Loyalty_Discount2,
cast(Loyalty_Discount2 as float) as Loyalty_Discount3,
"Sales_Before_Discount"-("Sales_Before_Discount"*Loyalty_Discount3)  as Sales_After_Discount,
Sales_After_Discount-("Unit_Cost" * Quantity) As Profit,

*
from LoyaltyTable as A
inner join ProductTransactionsTable as B
on A."Loyalty_Number" = B."Loyalty_Number"
